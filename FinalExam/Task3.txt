using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

public class Task3
{
    public static void Main()
    {
        Dictionary<string, List<int>> warriors = new Dictionary<string, List<int>>();

        string[] input = Console.ReadLine().Split(":").ToArray();

        while (input[0] != "Results")
        {
            string command = input[0];
            if (command.Equals("Add"))
            {
                string warrior = input[1];
                int health = int.Parse(input[2]);
                int energy = int.Parse(input[3]);

                if (warriors.ContainsKey(warrior))
                {
                    warriors[warrior][0] = warriors[warrior][0] + health;
                }
                else
                {
                    List<int> listHealthEnergy = new List<int> { health, energy };
                    warriors.Add(warrior, listHealthEnergy);
                }
            }
            else if (command.Equals("Attack"))
            {
                string attacker = input[1];
                string defender = input[2];
                int damage = int.Parse(input[3]);

                if (warriors.ContainsKey(attacker) && warriors.ContainsKey(defender))
                {
                    int remaigningHealth = warriors[defender][0] - damage;
                    int remaigningEnergy = warriors[attacker][1] - 1;

                    if (remaigningHealth <= 0)
                    {
                        warriors.Remove(defender);
                        Console.WriteLine($"{defender} was disqualified!");
                    }
                    else
                    {
                        warriors[defender][0] = remaigningHealth;
                    }

                    if (remaigningEnergy <= 0)
                    {
                        warriors.Remove(attacker);
                        Console.WriteLine($"{attacker} was disqualified!");
                    }
                    else
                    {
                        warriors[attacker][1] = remaigningEnergy;
                    }
                }
            }
            else if (command.Equals("Delete"))
            {
                string warrior = input[1];

                if (warrior.Equals("All"))
                {
                    warriors.Clear();
                }
                else
                {
                    warriors.Remove(warrior);
                }
            }

            input = Console.ReadLine().Split(":").ToArray();
        }

        Console.WriteLine($"People count: {warriors.Count}");

        foreach (var kvp in warriors.OrderByDescending(v => v.Value[0]).ThenBy(x => x.Key))
        {
            Console.WriteLine($"{kvp.Key} - {kvp.Value[0]} - {kvp.Value[1]}");
        }
    }
}