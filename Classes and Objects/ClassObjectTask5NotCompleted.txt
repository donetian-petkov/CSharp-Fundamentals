int numberOfTeams = int.Parse(Console.ReadLine());
    List<Team> teams = new List<Team>();
    List<Team> disbandedTeams = new List<Team>();
 
    for (int i = 0 ; i < numberOfTeams; i++)
    {
      string[] teamInput = Console.ReadLine().Split("-");

      string creator = teamInput[0];
      string teamName = teamInput[1];
      bool doesTeamExist = false;
      bool doesCreatorExist = false;

      for (int j = 0 ; j < teams.Count; j++)
      {
      if (teams[j].Creator == creator)
      {
        doesCreatorExist = true;
      }
      else if (teams[j].Name == teamName)
      {
        doesCreatorExist = true;
      }
      }

      if (doesCreatorExist)
      {
        Console.WriteLine($"{creator} cannot create another team!");
        continue;
      }

      if (doesTeamExist)
      {
        Console.WriteLine($"Team {teamName} was already created!");
        continue;
      }

      Team newTeam = new Team(teamName,creator);
      teams.Add(newTeam);
    }

    while (true)
    {
      string stringInput = Console.ReadLine();

      if (stringInput == "end of assignment")
      {
        break;
      }

      Console.WriteLine("this");
      string[] newMember = stringInput.Split("->");

      string memberName = newMember[0];
      string teamName = newMember[1];
      Console.WriteLine("there");
      bool doesTeamExist = false;

      for (int i = 0 ; i < teams.Count ; i++)
      {
        if (teams[i].members.Contains(memberName))
        {
          Console.WriteLine($"Member {memberName} cannot join team {teams[i].Name}!");
          break;
        }
        if (teams[i].Name == teamName)
        {
          doesTeamExist = true;
          teams[i].AddMember(memberName);
        }
      }

      if (!doesTeamExist)
      {
        Console.WriteLine($"Team {teamName} does not exist!");
        continue;
      }
    }

    for (int i = 0 ; i < teams.Count ; i++)
    {
      if (teams[i].members.Count == 0)
      {
        disbandedTeams.Add(teams[i]);
      }
    }

    disbandedTeams.Sort((c1,c2) => c1.Name.CompareTo(c2.Name));

    Console.WriteLine("Teams to disband:");
    Console.WriteLine(string.Join("\n", disbandedTeams));
    Console.WriteLine(string.Join("\n", teams));
  }
}

public class Team {

  public Team (string name, string creator)
  {
    Name = name;
    Creator = creator;
    this.AddMember(creator);
  }

  public string Name { get; set; }
  public string Creator { get; set; }
  public List<string> members  = new List<string>();

  public void AddMember(string member) 
  {
    members.Add(member);
  } 

}