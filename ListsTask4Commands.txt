using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;

class MainClass {

  public static void Main (string[] args) {

    List<int> intList = Console.ReadLine().Split(' ')
                                          .Select(int.Parse)
                                          .ToList();

    string nextInput = Console.ReadLine();

    while (nextInput != "End")
    {
      string[] inputArray = nextInput.Split();

      string command = inputArray[0];

      if (command == "Add")
      {
        intList.Add(int.Parse(inputArray[1]));
      } 
      else if (command == "Insert") 
      { 
         int number =  int.Parse(inputArray[1]);
         int position = int.Parse(inputArray[2]);
         if (position >= intList.Count || position < 0)
         {
           Console.WriteLine("Invalid index");
         }
         else 
         {
           intList.Insert(position, number);
         }
      }
      else if (command == "Remove")
      {
        int position = int.Parse(inputArray[1]);

        if (position >= intList.Count || position < 0)
         {
           Console.WriteLine("Invalid index");
         }
         else 
         {
           intList.RemoveAt(position);
         }
        
      }
      else if (inputArray[1] == "left")
      {
        int numberShifts = int.Parse(inputArray[2]);
       for (int i = 0 ; i < numberShifts; i++)
       {
           int first = intList[0];
           intList.RemoveAt(0);
           intList.Add(first);          
       }
      } 
      else if (inputArray[1] == "right")
      {
        int numberShifts = int.Parse(inputArray[2]);
        for (int i = 0 ; i < numberShifts; i++)
        {
           int last = intList[intList.Count - 1];    
           intList.RemoveAt(intList.Count - 1);  
           intList.Insert(0, last);
        }
      }
      
      nextInput = Console.ReadLine();    
  }    
      Console.WriteLine(string.Join(" " , intList));
  
  }
}


